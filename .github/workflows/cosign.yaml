name: Image Cosign Example
on:
  workflow_dispatch:
    inputs:
      singingKey:
        description: 'Sign with GitHub OIDC'
        type: boolean
        required: false
        default: true
  schedule:
    # At the end of every day
    - cron: "0 0 * * *"

jobs:
  cosign:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token

    name: build-image
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Chainctl
        uses: chainguard-dev/setup-chainctl@main
        with:
          identity: "b8130cfde995dab4bb2f2b8e104417ab3632edd3/27833b8844898552"
          
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.4.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - id: docker_meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ghcr.io/jasonbishay/cosign
          tags: type=sha,format=long

      - name: Build and Push container images
        uses: docker/build-push-action@v6.14.0
        id: build-and-push
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}

      # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
      - name: Sign image with Cosign
        run: |
          GH_KEY="${{ inputs.signingKey }}"
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          if [ "$GH_KEY" = true ] ; then
            cosign sign --yes ${images}
          else
            cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
          fi
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
      # The easy way:
     # - name: Sign the images using GitHub OIDC Provider
     #   env:
     #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
     #     TAGS: ${{ steps.docker_meta.outputs.tags }}
     #   if: github.event.inputs.signingKey == 'true'
     #   run: |
     #     images=""
     #     for tag in ${TAGS}; do
     #       images+="${tag}@${DIGEST} "
     #     done
     #     cosign sign --yes ${images}
